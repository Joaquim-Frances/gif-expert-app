{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","event","preventDefault","trim","length","categ","type","value","placeholder","onChange","target","getGif","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAMaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,uBAAMC,UAAU,gDAAgDC,SAT/C,SAACC,GAClBA,EAAMC,iBACHL,EAAWM,OAAOC,OAAS,IAC1BT,GAAe,SAAAU,GAAK,OAAIR,GAAJ,mBAAmBQ,OACvCP,EAAc,MAKlB,UACI,oDACA,uBACIQ,KAAK,OACLC,MAAQV,EACRW,YAAY,8CACZC,SAnBc,SAACR,GACvBH,EAAcG,EAAMS,OAAOH,QAmBnBR,UAAU,uB,+BC9BbY,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGZC,EAHY,iDAGqCC,UAAWH,GAHhD,+DAIMI,MAAOF,GAJb,cAIZG,EAJY,gBAKKA,EAAUC,OALf,uBAKVC,EALU,EAKVA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXxB,kBAeVM,GAfU,4CAAH,sDCENO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,qBAAcf,UAAU,yCAAxB,SACI,qBAAK6B,IAAKd,EAAKe,IAAKL,KADdD,ICALO,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECAX,SAAEA,GAAe,IAAD,EAEdhB,mBAAS,CAE/BuB,KAAM,GACNY,SAAS,IAL2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAyBxC,OAhBAC,qBAAU,WAENvB,EAAQC,GACHuB,MAAK,SAAAC,GAEFH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAKtB,CAAEnB,IAIEoB,EDtBmBK,CAAczB,GAAhCO,EAH2B,EAG3BA,KAAMY,EAHqB,EAGrBA,QAEd,OACI,eAAC,WAAD,WACA,mCAAOnB,EAAP,OACCmB,GAAW,mDACZ,qBAAKhC,UAAU,YAAf,SAEYoB,EAAKE,KAAK,SAAAC,GACN,OACA,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEenBe,EA7BM,WAAO,IAAD,EAGa1C,mBAAS,IAHtB,mBAGhB2C,EAHgB,KAGJ5C,EAHI,KAMvB,OACI,sBAAKI,UAAU,4CAAf,UACI,gDACA,cAAC,EAAD,CAAaJ,cAAgBA,IAC7B,uBAGA,6BAEQ4C,EAAWlB,KAAK,SAAAT,GACZ,OACI,cAAC,EAAD,CAEIA,SAAWA,GADHA,YCjBxC4B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.6863ff53.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleImputChange = (event) => {\r\n        setInputValue(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) =>{\r\n        event.preventDefault();\r\n        if(inputValue.trim().length > 2){ \r\n            setCategories( categ =>[inputValue, ...categ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"addCategory animate__animated animate__zoomIn\" onSubmit={ handleSubmit }>\r\n            <h3>Buscar categoria: </h3>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                placeholder=\"Â¿Sobre que tema quieres que busque GIFs?\"\r\n                onChange= { handleImputChange }\r\n                className=\"input-category\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGif = async( category ) => {\r\n\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=INLRsTY1hLJx4oc4O7mjMKEzAaLEg1fb`;\r\n    const respuesta = await fetch( url );\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    return (gifs);\r\n   \r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    return (\r\n        <div key={id} className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n   \r\n    const { data, loading } = useFetchGifs( category );\r\n    \r\n    return (\r\n        <Fragment>\r\n        <h3> { category } </h3>\r\n        {loading && <p> Cargando datos...</p>}\r\n        <div className='card-grid'>\r\n                {\r\n                    data.map( img =>{\r\n                        return(\r\n                        <GifGridItem \r\n                        key={ img.id }\r\n                        { ...img } />\r\n                        )\r\n                    })\r\n                }\r\n        </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        \r\n        data: [],\r\n        loading: true,\r\n\r\n    });\r\n\r\n    useEffect(()=> {\r\n\r\n        getGif( category )\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                })\r\n\r\n            })\r\n\r\n    }, [ category ])\r\n\r\n    \r\n\r\n    return state;\r\n\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n   \r\n    const [categories, setCategories] = useState([]);\r\n\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeInRightBig\">\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n\r\n            \r\n            <ol>\r\n                { \r\n                    categories.map( category => {\r\n                        return(\r\n                            <GifGrid \r\n                                key = { category }\r\n                                category={ category }\r\n                            />)\r\n                    })\r\n                }\r\n            </ol>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport GifExpertApp from './GifExpertApp';\r\n\r\n\r\nReactDOM.render(\r\n  \r\n    <GifExpertApp />,\r\n  \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}